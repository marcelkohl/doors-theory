unit Unit1; 

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,
  ExtCtrls, ComCtrls, Buttons, DateUtils, math;

type

  { TForm1 }

  TForm1 = class(TForm)
    Bevel1: TBevel;
    Bevel2: TBevel;
    btnGerar: TButton;
    cbxRevelarUma: TCheckBox;
    cbxTrocarNaChance: TCheckBox;
    Image1: TImage;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    lblVezes: TLabel;
    memCombinacoes: TMemo;
    memDados: TMemo;
    SpeedButton1: TSpeedButton;
    tkbVezes: TTrackBar;
    procedure btnGerarClick(Sender: TObject);
    procedure cbxRevelarUmaChange(Sender: TObject);
    procedure cbxTrocarNaChanceChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure memCombinacoesChange(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure tkbVezesChange(Sender: TObject);
  private
    { private declarations }
  public
    { public declarations }
  end; 

var
  Form1: TForm1; 

  bg_RevelarUma : boolean;
  bg_TrocarQuandoChance : boolean;
  ig_TotalJogados, ig_TotalPontos : integer;

implementation

uses unit2;
{$R *.lfm}

{ TForm1 }

procedure TForm1.btnGerarClick(Sender: TObject);
var
   al_portas : array [1..3] of integer;
   al_contaPortas : array [1..3] of integer;
   al_contaAcertos : Array [1..3] of integer;
   il_contador : integer;
   il_NovaPorta, il_contaAcerto : integer;
   il_revelado, il_posicaoRevelada, il_posicaoAcerto : integer;
   bl_jaTrocou : boolean;
begin
    // zera contadores
    al_contaPortas[1] := 0;
    al_contaPortas[2] := 0;
    al_contaPortas[3] := 0;

    al_contaAcertos[1] := 0;
    al_contaAcertos[2] := 0;
    al_contaAcertos[3] := 0;

    il_contaAcerto:=0;

    for il_contador := 1 to (tkbVezes.Position*10) do
     begin
          // bode nas portas
          al_portas[1] := 0;
          al_portas[2] := 0;
          al_portas[3] := 0;

          //carro em uma das portas
          al_portas[random(3)+1] := 1;

          // atualiza contador de porta
          if al_portas[1] = 1 then
           al_contaPortas[1] := al_contaPortas[1] + 1
          else if al_portas[2] = 1 then
           al_contaPortas[2] := al_contaPortas[2] + 1
          else
          al_contaPortas[3] := al_contaPortas[3] + 1;

          //convidado seleciona porta
          il_posicaoAcerto := random(3)+1;
//          il_posicaoAcerto := 3; // fixa porta selecionada
          memCombinacoes.Lines.Add('Convidado selecionou porta:'+IntToStr(il_posicaoAcerto));

          //se pediu pra revelar, entao revela e salva porta revelada
          if bg_RevelarUma = true then
           begin;
                il_revelado := 0;

                 while il_revelado = 0 do
                 begin
                      il_posicaoRevelada := random(3)+1;

                      if (al_portas[il_posicaoRevelada] = 0) and (il_posicaoRevelada <> il_posicaoAcerto) then
                       begin
                          il_revelado := il_posicaoRevelada;
                          memCombinacoes.Lines.Add('Apresentador revelou a porta:'+IntToStr(il_revelado));
                       end;
                 end;
           end;

          // se pediu pra trocar quando houver chance, entao troca
          if bg_TrocarQuandoChance = true then
           begin
                bl_jaTrocou := false;

                for il_NovaPorta := 1 to 3 do
                 begin
                      if (il_NovaPorta <> il_posicaoRevelada) and (il_NovaPorta <> il_posicaoAcerto) and (bl_jatrocou=False) then
                       begin
                            il_posicaoAcerto:=il_NovaPorta;
                            bl_jaTrocou := true;
                       end;
                 end;

                memCombinacoes.Lines.Add('Convidado trocou para a porta:'+IntToStr(il_posicaoAcerto));

           end
          else
           memCombinacoes.Lines.Add('Convidado ficou na porta:'+IntToStr(il_posicaoAcerto));


          // contabiliza acerto
          if al_portas[il_posicaoAcerto] = 1 then
           begin
                il_contaAcerto:=il_contaAcerto+1;
                al_contaAcertos[il_posicaoAcerto] := al_contaAcertos[il_posicaoAcerto]+1;
                memCombinacoes.Lines.Add('Convidado acertou ficando na porta:'+IntToStr(il_posicaoAcerto));
           end
          else
           memCombinacoes.Lines.Add('Convidado errou ficando na porta:'+IntToStr(il_posicaoAcerto));



          memCombinacoes.Lines.Add('Portas: ['+IntToStr(al_portas[1])+'-'+IntToStr(al_portas[2])+'-'+IntToStr(al_portas[3])+']');
     end;

    memCombinacoes.Lines.Add('-------');

    // adiciona dados
    memDados.Lines.Add('['+FormatDateTime('dd/mm/yyyy - hh:mm:ss', Now())+']-----------------------------------------------------');

    memDados.Lines.Add('Porta 1 foi premiada '+IntToStr(al_contaPortas[1])+' vezes');
    memDados.Lines.Add('Porta 2 foi premiada '+IntToStr(al_contaPortas[2])+' vezes');
    memDados.Lines.Add('Porta 3 foi premiada '+IntToStr(al_contaPortas[3])+' vezes');
    memDados.Lines.Add(' ');

    memDados.Lines.Add('Convidado acertou '+IntToStr(il_contaAcerto)+' vezes');
    memDados.Lines.Add('das quais: '+IntToStr(al_contaAcertos[1])+' na porta 1, '+IntToStr(al_contaAcertos[2])+' na porta 2, '+IntToStr(al_contaAcertos[3])+' na porta 3');
    memDados.Lines.Add(' ');

    // atualiza pontos
    ig_TotalJogados := ig_TotalJogados + tkbVezes.Position;
    ig_TotalPontos := ig_TotalPontos + il_contaAcerto;

    memDados.Lines.Add('MÃ©dia de acertos: '+FloatToStr(RoundTo(ig_TotalPontos/ig_TotalJogados,-2)) );
    memDados.Lines.Add(' ');
end;

procedure TForm1.cbxRevelarUmaChange(Sender: TObject);
begin
  if cbxRevelarUma.Checked = true then
   bg_RevelarUma := true
  else
   bg_RevelarUma := false;
end;

procedure TForm1.cbxTrocarNaChanceChange(Sender: TObject);
begin
  if cbxTrocarNaChance.Checked = true then
   bg_TrocarQuandoChance := true
  else
   bg_TrocarQuandoChance := false;

end;

procedure TForm1.FormCreate(Sender: TObject);
begin

end;

procedure TForm1.FormShow(Sender: TObject);
begin
    Randomize;

    memDados.Clear;
    memCombinacoes.Clear;

    bg_RevelarUma := false;
    bg_TrocarQuandoChance := false;

    ig_TotalJogados := 0;
    ig_TotalPontos := 0;

    Form2.Showmodal;
end;

procedure TForm1.memCombinacoesChange(Sender: TObject);
begin

end;

procedure TForm1.SpeedButton1Click(Sender: TObject);
begin
  memCombinacoes.Clear;
  memDados.Clear;

  ig_TotalPontos := 0;
  ig_TotalJogados := 0;
end;

procedure TForm1.tkbVezesChange(Sender: TObject);
begin
  lblVezes.Caption:=IntToStr(tkbVezes.Position*10);
end;

end.

